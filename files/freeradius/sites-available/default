server default {

listen {
	type = auth
	ipaddr = *
	port = 0
	limit {
	      max_connections = 16
	      lifetime = 0
	      idle_timeout = 30
	}
}

listen {
	ipaddr = *
	port = 0
	type = acct
	limit {
	}
}

# IPv6 versions of the above - read their full config to understand options
listen {
	type = auth
	ipv6addr = ::	# any.  ::1 == localhost
	port = 0
	limit {
	      max_connections = 16
	      lifetime = 0
	      idle_timeout = 30
	}
}

listen {
	ipv6addr = ::
	port = 0
	type = acct
	limit {
	}
}

authorize {

	filter_username
	preprocess
	chap
	mschap
	digest
	suffix
	eap {
		ok = return
	}

	#files
	sql

	update control {
		MS-CHAP-Use-NTLM-Auth := No
	}

	-ldap
	expiration
	logintime
	pap

}

authenticate {
	Auth-Type PAP {
		pap
	}

	Auth-Type CHAP {
		chap
	}

	Auth-Type MS-CHAP {
		mschap
	}

	mschap
	digest
	eap
}

preacct {
	preprocess
	acct_unique
	suffix
	files
}

accounting {
	detail
	unix
	# Log traffic to an SQL database.
	sql
	#  Return an address to the IP Pool when we see a stop record.
	sqlippool
	#pool_1 # Uncomment pool_1 to pool_16 to enable reading ip pools from files
	#pool_2
	#pool_3
	#pool_4
	#pool_5
	#pool_6
	#pool_7
	#pool_8
	#pool_9
	#pool_10
	#pool_11
	#pool_12
	#pool_13
	#pool_14
	#pool_15
	#pool_16
	exec
	attr_filter.accounting_response
}

session {
}

post-auth {
	if (session-state:User-Name && reply:User-Name && request:User-Name && (reply:User-Name == request:User-Name)) {
		update reply {
			&User-Name !* ANY
		}
	}
	update {
		&reply: += &session-state:
	}
	#  After authenticating the user, do another SQL query.
	sql

	# Assign pool name based on NAS-Identifier
	update control {
   		Pool-Name := "%{sql: SELECT pool_name FROM nas_pool_name WHERE nasidentifier='%{NAS-Identifier}'}"
	}

	#  Get an address from the IP Pool.
	sqlippool
	#pool_1
	#pool_2
	#pool_3
	#pool_4
	#pool_5
	#pool_6
	#pool_7
	#pool_8
	#pool_9
	#pool_10
	#pool_11
	#pool_12
	#pool_13
	#pool_14
	#pool_15
	#pool_16
	exec
	remove_reply_message_if_eap

	Post-Auth-Type REJECT {
		attr_filter.access_reject
		eap
		remove_reply_message_if_eap
	}

	Post-Auth-Type Challenge {
	}

}

pre-proxy {

}

post-proxy {

	eap
}
}
