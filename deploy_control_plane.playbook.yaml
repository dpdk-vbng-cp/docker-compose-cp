---
- hosts: all
  vars:
    src_path: "~/docker-compose-cp"
    dest_path: "~/{{ cp_name }}"
  vars_files: 
    - "~/vBNG/docker-compose-cp/{{ cp_name }}.yml"

  tasks:
  - name: install required system packages for docker official 
    become: yes
    become_method: sudo
    apt: 
      name: 
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common
        - virtualenv
        - python3-setuptools
  
  - name: add Dockerâ€™s official GPG key and adding the apt repo
    become: yes
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable
    become: yes

  - name: update apt cache and install required packages
    become: yes
    apt:
      name: 
        - aptitude
        - docker-ce
        - docker-ce-cli
        - containerd.io
        - python3-pip

  - name: install docker python module
    pip:
      name: 
        - docker-compose
        - docker

  - name: install docker-compose and add to user 
    become: yes
    get_url:
      url: https://github.com/docker/compose/releases/download/1.24.1/docker-compose-Linux-x86_64
      dest: /usr/bin/docker-compose
      mode: 0755

  - name: "add the user {{ ansible_user_id }} to the group 'docker'"
    become: yes
    user:
      name: "{{ ansible_user_id }}"
      groups: docker
      append: yes

  - name: install the python3 redis module
    pip:
      name: redis
      executable: pip3

  - name: clone docker-compose-cp git repo including all submodules
    git:
      repo: 'https://github.com/dpdk-vbng-cp/docker-compose-cp.git'
      dest: ~/docker-compose-cp

  - name: creating controll plane without affecting the git repo
    shell: |
      cp -r {{ src_path }}/. {{ dest_path }}
  
  - name: generate docker-compose.yml config for WFS/local-lab setup
    template:
      src: docker-compose.j2
      dest: "{{ dest_path }}/docker-compose.yml"

  - name: generate accel-ppp.conf config for WFS/local-lab setup
    template:
      src: accel-ppp.j2
      dest: "{{ dest_path }}/config/accel-pppd/etc/accel-ppp.conf"

  - name: generate clients.conf for radius authentication
    template:
      src: clients.j2
      dest: "{{ dest_path }}/config/freeradius/etc/raddb/clients.conf"

  - name: generate docker-entrypoint for accel-pppd with interface slicing
    template:
      src: docker-entrypoint.j2
      dest: "{{ dest_path }}/docker-accel-ppp/accel-pppd/docker-entrypoint.sh"
      
  - name: build the accel-ppp module
    make:
      chdir: "{{ dest_path }}/docker-accel-ppp"
      target: build

  - name: start containerized control plane with docker-compose
    docker_compose:
      project_src: "{{ dest_path }}"
      nocache: yes
      files: 
         - docker-compose.yml

#  - name: update the vxlan connectivity script
#    template:
#      src: vxlan_CP-DP.j2
#      dest: "{{ dest_path }}/vxlan_CP-DP.sh"

#  - name: creating vxlan interface and connecting data plane
#    become: yes
#    command: sh /home/"{{ ansible_user_id }}"/docker-compose-cp/vxlan_CP-DP.sh
