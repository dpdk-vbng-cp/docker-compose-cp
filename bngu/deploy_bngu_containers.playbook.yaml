---
- hosts: all
  vars:
    host_interface: "{{ ansible_default_ipv4.interface }}"
  tasks:
  - name: update apt cache and install required packages (including docker)
    become: yes
    apt:
      update_cache: yes
      name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
      - virtualenv
      - python3-setuptools
      - aptitude
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - python3-pip
      - bridge-utils
      - linux-headers-generic
      - build-essential

  - name: install docker and docker-compose python modules
    pip:
      name:
        - docker-compose
        - docker
      executable: pip3

  - name: "add the user {{ ansible_user_id }} to the group 'docker'"
    become: yes
    user:
      name: "{{ ansible_user_id }}"
      groups: docker
      append: yes
    register: docker_user_add

  - name: Reset ssh connection to allow user changes to affect 'current login user'
    meta: reset_connection
    when: docker_user_add changed

  - name: "Create bng_up folder for bngu files"
    become: yes
    file:
      path: "/etc/bng_up/"
      state: directory
      mode: '0755'
    when: run_mode == "deploy" or run_mode == "clean_deploy"

  - name: "Generate PFCP BNG user plane configuration files"
    become: yes
    template:
      src: bngu.j2
      dest: "/etc/bng_up/{{ item.container_name }}.json"
    vars:
      bngu_ip_addr: "{{ item.bngu_ip_addr }}"
      upstream_dpdk_port: "{{ item.upstream_dpdk_port }}"
      downstream_dpdk_port: "{{ item.downstream_dpdk_port }}"
      bng_access_mac_address: "{{ item.bng_access_mac_address }}"
      bng_core_mac_address: "{{ item.bng_core_mac_address }}"
      upstream_route_ip_address: "{{ item.upstream_route_ip_address }}"
      upstream_route_mac_address: "{{ item.upstream_route_mac_address }}"
      downstream_route_mac_address: "{{ item.downstream_route_mac_address }}"
    with_items: "{{ up_instances }}"
    when: run_mode == "deploy" or run_mode == "clean_deploy"

  - name: "stop and remove PFCP BNG UP docker containers"
    docker_container:
      state: absent
      name: "{{ item.container_name }}"
    with_items: "{{ up_instances }}"
    when: run_mode == "clean_deploy" or run_mode == "clean"

  - name: "remove secondary IP Addresses created by PFCP BNG UP"
    become: yes
    command: "ip a del {{ item.bngu_ip_addr }}/{{ net_prefix }} dev {{ host_interface }}"
    with_items: "{{ up_instances }}"
    ignore_errors: yes
    when: run_mode == "clean_deploy" or run_mode == "clean"

  - name: "Start PFCP BNG UP application containers"
    docker_container:
      name: "{{ item.container_name }}"
      image: "bisdn/pfcp-bng-up"
      network_mode: host
      capabilities:
        - "SYS_NICE"
        - "NET_ADMIN"
      env:
        BNGU_IP: "{{ item.bngu_ip_addr }}"
        BNGU_NETMASK_BITS: "{{ net_prefix }}"
        BNGU_HOST_INTERFACE: "{{ host_interface }}"
      volumes:
        - /etc/bng_up/{{ item.container_name }}.json:/opt/bng-pfcp/build/bngu/build/bngu.json
    with_items: "{{ up_instances }}"
    when: run_mode == "deploy" or run_mode == "clean_deploy"
